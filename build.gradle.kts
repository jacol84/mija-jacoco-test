
plugins {
    id("org.jetbrains.kotlin.jvm") version "1.3.72"
    jacoco
    application
}
val value = buildDir
val allTestCoverageFile = "$buildDir/jacoco/allTestCoverage.exec"

allprojects{
    apply{
        plugin("jacoco")
        plugin("org.jetbrains.kotlin.jvm")
    }
    repositories {
        jcenter()
    }

    dependencies {
        implementation(platform("org.jetbrains.kotlin:kotlin-bom"))
        implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
        testImplementation("org.jetbrains.kotlin:kotlin-test")
        testImplementation("org.jetbrains.kotlin:kotlin-test-junit")
    }

//    tasks.test {
//        configure<JacocoTaskExtension> {
//            isEnabled = true
//            destinationFile = file("$value/jacoco/$name.exec")
//            includes = listOf("mija.*")
////            excludes = emptyList()
////            excludeClassLoaders = emptyList()
////            isIncludeNoLocationClasses = true
////            sessionId = "<auto-generated value>"
////            isDumpOnExit = true
////            classDumpDir = null
////            output = JacocoTaskExtension.Output.FILE
////            address = "localhost"
////            port = 6300
////            isJmx = false
//        }
//    }
}
tasks.register<JacocoMerge>("jacocoMergeTest"){
    destinationFile = file(allTestCoverageFile)
    executionData(file("G:\\praca\\app\\mija-jacoco-test\\ModuleA\\build\\jacoco\\test.exec"))
    executionData(file("G:\\praca\\app\\mija-jacoco-test\\ModuleB\\build\\jacoco\\test.exec"))
    executionData(file("G:\\praca\\app\\mija-jacoco-test\\ModuleCross\\build\\jacoco\\test.exec"))
}

application {
    mainClassName = "mija.jacoco.test.AppKt"
}
